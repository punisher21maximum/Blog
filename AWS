choosing region : AWS overview
1.latency : closest
2.cost
3.complaiance : law restriction
4.services : new service avai in region or not

region : AWS Infra P1
1.has data center
2.>1 avai zones (AZ) : each AZ copy of one another : 1 AZ destroyed still have all info on all other AZs'

AWS cloud > regions > AZ > DataCenter


EC2
1.flexible
2.create instances : pay : delete instance 
3.configure : OS : Linux, ubuntu, Windows
            :choose OS : choose AMI amazon machine image 
4.AMI contain : configuration of instance : possible apps on that instance 
5.1 AMI : Launch : multiple instance : all instance will share same configurations
6.choose : instance 1)type and 2)size : these decide : amt of compute, memory, network capabilites

Type of EC2
: compute optimized, memory optimized, storage optimized, and more

Modify
:You can change type of EC2 later also if you realise other option is more suitable
:resize instance
:modify by clicks or programming or automate 

------------------------------------------

launch EC2 : Creating a (Web Server) Using Amazon EC2 
1. Choose AMI 2. Choose Instance Type 3. Configure Instance 4. Add Storage 5. Add Tags 6. Configure Security Group 7. Review
AWS services > search EC2 > click EC2 > EC2
you reach here : EC2 dashboard : https://us-east-2.console.aws.amazon.com/ec2/v2/home?region=us-east-2#Home:
1.click : launch instance
2.choose AMI : Amazon Linux 2 AMI (HVM), SSD Volume Type #
3.select instance type : t2 micro : Next to configure the instance details #
4.select VPC : network : Note : coursera chose app vpc , I chose deafult
select subnet : subnet : Note : coursera chose public , I chose deafult
role : IAM role : Note : coursera chose instance role , I chose None
advance details : at bottom of page : user data (as text) : these are commands that run once instance is launched #
click : Next add storage
5.Storage : leave to default : add tags #
6.Tags : add tag : name value : Next to configure the security group #
7.Step 6: Configure Security Group : already created : launch

---------------creating instance
click : view instances
shows : list of instances : current one - running , checks
from below : copy :  public IP address : paste in new browser tab and enter : shows : empty dir


light
:https://lightsail.aws.amazon.com/ls/webapp/ap-south-1/instances/WordPress-1/connect

----
Networking AWS
Amazon Virtual Private Cloud (VPC) Part 1
Build VPC > inside it > build subnet > inside build > EC2 

To build VPC require : 1.region name 2.IP address range

Build VPC and subnet:
services > VPC
on VPC dashboard > click Launch VPC wizard
on <next page> > select
Step 2: VPC with a Single Public Subnet : 

IPv4 CIDR block:* 10.10.0.0/16
VPC name: Directory VPC

Public subnet's IPv4 CIDR:* 10.10.1.0/24
Availability Zone:* us-east-2a #Note : origin in Top Right : ohio

Theory : now we have created a VPC with subnet in it. Now if we have webserver inside subnet, no one can access it.
To allow access to webserver inside VPC, we need a Internet Gate Way IGW. 
Create an IGW > attatch it to VPC 
Create routing table > associate to subnet

Create IGW 
services > VPC
on VPC dashboard > on left select > Internet Gateways 
on Internet Gateways > click create internet Gateway > name : Directory Gateway > close
on Internet Gateways : can see your gateway : Directory Gateway : Directory Gateway

attatch IGW to VPC
on Internet Gateways : select IGW (Directory Gateway) : click actions : select attatch VPC 
Internet gateways > Attach to VPC : select your VPC (Directory VPC) from drop down : click Attatch

Create Route Tables !
services > VPC
on VPC dashboard > on left select > Route Tables
on Route Tables > click create Route Tables  
name Tag : Public Route table 
VPC : from drop down > select Directory VPC
click : create

on Route Tables > You can see your route table : Public Route table
select : Public Route table : 
at bottom you can see : Routes : you can see your IGW route
add route for traffic from internet;
click edit : Destination 0.0.0.0/0 : Target <hash key for Directory Gateway> : click save
Note : 0.0.0.0/0 is traffic from internet
at bottom you can see : subnet associations :  
click edit : choose from dropdown from subnet1 : click save

                                                                                               Amazon Virtual Private Cloud (VPC) Part 2

To store my database we create another subnet.
Not connected to IGW : so no one can access it from internet.
But subnet1 can access : bcos subnet1 and subnet2 are on same VPC

Create subnet2_private 
name : subnet2_private
VPC : VPC1
IPv4 cdr : 10.10.2.0/24

Create Database in subnet 2 : later videos

-------------------------

Now to create multiple AZs' (avai zones)

Create 2 new subnets : 1 public and 1 private

            Create 2nd public subnet
            name tag : subnet2_public
            VPC : vpc-027f82a76a498d11b or VPC1
            Avai zones : us-west-2b
            IPv4 CIDR : 10.10.3.0/24

            Create 2nd private subnet
            name tag : subnet2_private
            VPC : vpc-027f82a76a498d11b or VPC1
            Avai zones : us-west-2b
            IPv4 CIDR : 10.10.4.0/24

Now configure route table RT1 so internet traffic can be directed from IGW1 to subnet2_public also.

            on Route Tables >  
            select : RT1
            at bottom you can see : subnet associations :  
            click edit : choose from dropdown :subnet1_public is already checked : check subnet2_public also : click save

Create an EC2 instance in subnet2_public || do later
and change RDS (in subnet1_private) to a Multi-AZ RDS : || later videos
RDS (in subnet1_private) : will have standby : in another AZ : (in subnet2_private)


Now we have 2 AZ, so we user should be not be asked select which AZ to log in (subnet1_public or subnet2_public)
EBS : elastic load balancer : Does not matter in which, AZ user login : traffic will always be distributed equally.

Create EBS
services > EC2 > on left side > scroll down to : load balancer
load balancer > create load balancer
select type > application load balancer (HTTP/HTTPS

            Step 1: Configure Load Balancer
            name : ELB1
            VPC : VPC1
            Availibility zones : //select zones and also select subnet for each zone
            us-west-2a subnet1_public
            us-west-2b subnet2_public
            Step 2: Configure Security Settings : skip : 
            Step 3: Configure Security Groups : select <your security group> , that allow access over HTTP : 
            Step 4: Configure Routing
            name : webserver
            Step 5: Register Targets
            At bottom select our two zones : click : add to register
            They will move up 
            Step 6: Review : create 

load balancer > select ELB1 > at bottom see : DNS : copy paste and go in new tab 


To access the database or subnetx_private. 
Use VGW : virtual private gate way 
















