Introduction to Module 3: Databases

Amazon RDS in Detail
services > RDS 
RDS > select engine > mySQL 
choose use case > production
Note:  for choosing use case : 1]dev : 1 AZ 2]production : many AZ


Amazon DynamoDB : nosql
to use : only specify throughput ; no underlying hardware like in RDS 

Demo 
services > DynamoDB
tables > create table
  name : student
  primary key : name
  click : create


week4
video : Monitoring and Amazon CloudWatch
collect data at 1 place : operate on data : cloud watch alarms
example :
  you are reported latency in website : you find and observe : CPU 95% used : ask admin to create new server to decrease load for other servers
  : manual method : ppl bad exp
  Cloud service : set trigger event : if usage >60% on servers for more than 5min : create new server : report to admin
set alarms, visualize logs and metrics side-by-side, take automated actions, 
troubleshoot operational issues, and discover insights to optimize your applications  
  
  
video : Load Balancing
EBS
attatch EC2 to EBS : divide load
if autoscaling on : then newly created EC2 also get equal traffic
internal use : suppose you have many servers and many apps : put EBS in b/w them.

ELB three types of load balancers that all feature the : high availability, automatic scaling, and robust security
Application Load Balancer : layer 7 : based on content of request HTTP(S)
Network Load Balancer  : layer 4 : based on IP protocol data : TCP 
Classic Load Balancer : for multiple Amazon EC2 instances : operates at both the request level and the connection leve


video : Auto Scaling
EC2 instance created inside autoscaling group : idenitical instances : can launch as needed by Auto Scaling engine
connect EC2 instances to EBS
When EC2 instance pushed to a limit : cloud watch is alerted 

Demo :
services > EC2 > left bar , at bottom > auto scaling groups
Welcome to Auto Scaling : click : create auto scaling group
step1 : set EC2 config : has all steps of EC2 instance
step2 : set no of max EC2
step1 : 
1] choose AMI : Amazon Linux 2 AMI (HVM), SSD Volume Type
2] choose instance type : t2 micro
3] configure deatils : name - webserver : role - instance role : user data - copy paste code for start up , unzip zip files etc
4] add storage : skip
5] configire security group : select one
6] review

select key pair : later

step2 : 
1] create auto scaling group 
launch config : 
group name : webservers
group size : 2 
network : VPC1
subnet : out of 4, select both public ones from VPC1

Advance details : bcos we have created an ELB
load balancing : checked
classic load balancer :
target groups : webservers
  
2]scaling poilicies
select radio : use scaling ...
scale b/w 2 and 4 ...

scale group size
name : scale up 
target value : 60 (%)
instances need : 300

3]configure notifications
skip : optional

4]configure tags
skip

5]review

DONE--------------

TEST

Stress CPU for 10 min

Now

cloud watch : alarm summary : went >60% : launched 2 instances : load come down

services > EC2 > left bar > target groups 
select webservers > bottom > targets > 4 healthy targets















  
  
  
